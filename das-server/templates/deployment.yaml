apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "das-server.fullname" . }}
  labels:
    {{- include "das-server.labels" . | nindent 4 }}
  namespace: das
spec:
  {{- if not .Values.autoscaling.enabled }}
  {{- if or .Values.environment.prod .Values.environment.preprod}}
  replicas: {{ .Values.replicaCount.prod }}
  {{- else }}
  replicas: {{ .Values.replicaCount.test }}
  {{- end }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "das-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "das-server.selectorLabels" . | nindent 8 }}
        {{- if .Values.environment.preprod}}
        env: k8s-preprod
        {{- end }}
        {{- if .Values.environment.prod}}
        env: k8s-prod
        {{- end }}
        {{- if .Values.environment.test}}
        env: k8s
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "das-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          env:
          {{- toYaml .Values.image.env | nindent 10 }}
          args: 
          {{- toYaml .Values.image.args | nindent 10 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
           - containerPort: {{ .Values.service.port }}
             name: {{ .Values.service.name }}
             protocol: {{ .Values.service.protocol }}
           - containerPort: {{ .Values.serviceMon.port }}
             name: {{ .Values.serviceMon.name }}
             protocol: {{ .Values.serviceMon.protocol }}
          livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: proxy-secrets
            mountPath: /etc/proxy
            readOnly: true
          - name: secrets
            mountPath: /etc/secrets
            readOnly: true
          - name: robot-secrets
            mountPath: /etc/robots
            readOnly: true
          - name: hmac-secrets
            mountPath: /etc/hmac
            readOnly: true
         {{- if or .Values.environment.prod .Values.environment.preprod }}
          - name: logs
            mountPath: /data/logs
         {{- end }}
        - image: {{ .Values.imageExporter.path }}
          name: {{ .Values.imageExporter.name }}
          resources:
          {{- toYaml .Values.imageExporterResources | nindent 12 }}
          env:
          {{- toYaml .Values.imageExporter.env | nindent 10 }}
          args: 
          {{- toYaml .Values.imageExporter.args | nindent 10 }}
          volumeMounts:
          - name: proxy-secrets
            mountPath: /etc/proxy
            readOnly: true
{{- if or .Values.environment.prod .Values.environment.preprod }}
          - name: logs
            mountPath: /data/logs
        - image: {{ .Values.imagePromtail.path }}
          name: {{ .Values.imagePromtail.name }}
          resources:
          {{- toYaml .Values.imagePromtailResources | nindent 12 }}
          args:
          {{- toYaml .Values.imagePromtail.args | nindent 10 }}
          volumeMounts:
          - name: promtail-secrets
            mountPath: /etc/secrets
          - name: logs
            mountPath: /data/logs
        - name: {{ .Values.imageFilebeat.name}}
          image: {{ .Values.imageFilebeat.path }}
          args: {{ .Values.imageFilebeat.args }}
          env:
          {{- toYaml .Values.imageFilebeat.env | nindent 10 }}
          resources:
          {{- toYaml .Values.imageFilebeatResources | nindent 12 }}
          volumeMounts:
          - name: logs
            mountPath: /data/logs
          - name: config
            mountPath: /etc/filebeat.yml
            readOnly: true
            subPath: filebeat.yml
          - name: data
            mountPath: /usr/share/filebeat/data
          - name: varlog
            mountPath: /var/log
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
            readOnly: true
{{- end }}
      initContainers:
      {{- toYaml .Values.initContainers | nindent 6 }}
      volumes:
      - name: proxy-secrets
        secret:
          secretName: proxy-secrets
      - name: secrets
        secret:
          secretName: das-server-secrets
      - name: robot-secrets
        secret:
          secretName: robot-secrets
      - name: hmac-secrets
        secret:
          secretName: hmac-secrets
    {{- if or .Values.environment.prod .Values.environment.preprod }}
      - name: logs
        persistentVolumeClaim:
          claimName: logs-cephfs-claim-das
      - name: promtail-secrets
        configMap:
          name: das-server-promtail
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: config
        configMap:
          defaultMode: 0640
          name: das-server-filebeat-config
      - name: data
        emptyDir: {}       
      {{- end }}

