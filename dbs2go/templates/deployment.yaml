apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dbs2go.fullname" . }}
  labels:
    {{- include "dbs2go.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  {{- if or .Values.environment.prod .Values.environment.preprod }}
  replicas: 3
  {{- else }}
  replicas : {{ .Values.replicaCount}}     
  {{- end }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "dbs2go.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "dbs2go.selectorLabels" . | nindent 8 }}
        {{- if .Values.environment.preprod}}
        env: k8s-preprod
        {{- end }}
        {{- if .Values.environment.prod}}
        env: k8s-prod
        {{- end }}
        {{- if .Values.environment.test}}
        env: k8s
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "dbs2go.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          ports:
           - containerPort: {{ .Values.service.port }}
             name: {{ .Values.service.name }}
             protocol: {{ .Values.service.protocol }}
           - containerPort: {{ .Values.serviceMon.port }}
             name: {{ .Values.serviceMon.name }}
             protocol: {{ .Values.serviceMon.protocol }}
          env: 
          {{- toYaml .Values.env | nindent 10 }}
          livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
          command:
          {{- toYaml .Values.command | nindent 10 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: proxy-secrets
            mountPath: /etc/proxy
            readOnly: true
          - name: secrets
            mountPath: /etc/secrets
            readOnly: true
          - name: robot-secrets
            mountPath: /etc/robots
            readOnly: true
          - name: hmac-secrets
            mountPath: /etc/hmac
            readOnly: true
{{- if or .Values.environment.prod .Values.environment.preprod }}
          - name: logs
            mountPath: /data/logs
        - name: {{ .Values.image2.name }}
          image: {{ .Values.image2.path }}
          args: [
            "-c", "/etc/filebeat.yml",
            "-e",
          ]
          env:
          {{- toYaml .Values.image2env | nindent 10 }}
          resources:
          {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: logs
            mountPath: /data/logs
          - name: config
            mountPath: /etc/filebeat.yml
            readOnly: true
            subPath: filebeat.yml
          - name: data
            mountPath: /usr/share/filebeat/data
          - name: varlog
            mountPath: /var/log
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
            readOnly: true
{{- end }}
      volumes:
      - name: proxy-secrets
        secret:
          secretName: proxy-secrets
#        - name: secrets
#          secret:
#            secretName: dbs2go-secrets
      - name: robot-secrets
        secret:
          secretName: robot-secrets
      - name: hmac-secrets
        secret:
          secretName: hmac-secrets
      - name: secrets
        configMap:
          name: dbs2go-config
{{- if or .Values.environment.prod .Values.environment.preprod }}
      - name: logs
        persistentVolumeClaim:
{{- if .Values.environment.preprod }}
            claimName: logs-cephfs-claim-preprod-dbs
{{- end }}
{{- if .Values.environment.prod }}
            claimName: logs-cephfs-claim-prod-dbs
{{- end }}
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: config
        configMap:
          defaultMode: 0640
          name: dbs2go-filebeat-config
      - name: data
        emptyDir: {}
{{- end }}
