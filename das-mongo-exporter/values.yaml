# Default values for das-mongo-exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

environment:
  prod: false
  preprod: false
  test : false

image:
  repository: cmssw/exporters
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "HG2011h-c"
  command:
  - /data/mongodb_exporter
  - -web.listen-address
  - ":18230"
  - -mongodb.uri
  - "mongodb://das-mongo.das.svc.cluster.local:8230"
  - -mongodb.collect.replset=false
  - -mongodb.collect.oplog=false
  - -mongodb.collect.database
  - "das"
  - -groups.enabled
  - "asserts,durability,background_flushing,connections,extra_info,global_lock,index_counters,network,op_counters,memory,locks,metrics"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: 
prometheus.io/scrape: 'true'
prometheus.io/port: "18230"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

initContainers:
- name: checkcouchdb
  image: busybox:1.28
  command: ['sh', '-c', 'until nslookup das-mongo.das; do echo "Waiting for das-mongo"; sleep 10; done;']

service: 
  port: 18230
  name: das-mongo-p
  protocol: TCP
  type: ClusterIP

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
resources:
  requests:
    memory: "50Mi"
    cpu: "200m"
  limits:
    memory: "100Mi"
    cpu: "400m"


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
