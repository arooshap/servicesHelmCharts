# Default values for dbs-global-r.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 
  prod: 5
  test: 1

environment:
  prod: false
  preprod: false
  test : false

image:
  repository: cmssw/dbs
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "HG2108h-v3"
  command:
  - /bin/bash
  - /opt/setup-certs-and-run/setup-certs-and-run.sh

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: 
  prometheus.io/scrape: 'true'
  prometheus.io/port: "18252"

securityContext: 
  privileged: true

podSecurityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 2000

imageFilebeatSecurityContext:
  allowPrivilegeEscalation: false

livenessProbe:
  exec:
    command:
  exec:
    command:
    - /bin/sh
    - -c
    - |
    - cmsweb-ping --url=http://localhost:8252/dbs/prod/global/DBSReader/datasets?dataset=/ZMM*/*/* --authz=/etc/hmac/hmac -verbose 0 | egrep "^[2-4]"
  initialDelaySeconds: 60
  periodSeconds: 10

service: 
  port: 8252
  name: dbs-global-r
  protocol: TCP
  type: ClusterIP

serviceMon: 
  port: 18252 
  name: dbs-gr-mon 
  protocol: TCP

serviceCpyMon:
  port: 19252 
  name: dbs-gr-cpy-mon 
  protocol: TCP

resources:
  requests:
    memory: "1000Mi"
    cpu: "300m"
  limits:
    memory: "10Gi"
    cpu: "2000m"

#imageFilebeat values

imageFilebeat:
  name: dbs-global-r-filebeat
  path: docker.elastic.co/beats/filebeat:7.12.0
  env:
  - name: MY_POD_NAME
    valueFrom:
      fieldRef:
        apiVersion: v1
        fieldPath: metadata.name
  args: [
  "-c", "/etc/filebeat.yml",
  "-e",
  ]

imageFilebeatResources:
  requests:
    memory: "50Mi"
    cpu: "50m"

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
